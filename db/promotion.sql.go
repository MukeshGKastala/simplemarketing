// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: promotion.sql

package sqlc

import (
	"context"
)

const listPromotions = `-- name: ListPromotions :many
SELECT
	id, promotion_code, start_date, end_date, created_at, updated_at, deleted_at
FROM
	promotions
WHERE
	deleted_at IS NULL
`

func (q *Queries) ListPromotions(ctx context.Context) ([]Promotion, error) {
	rows, err := q.db.QueryContext(ctx, listPromotions)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Promotion
	for rows.Next() {
		var i Promotion
		if err := rows.Scan(
			&i.ID,
			&i.PromotionCode,
			&i.StartDate,
			&i.EndDate,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.DeletedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
